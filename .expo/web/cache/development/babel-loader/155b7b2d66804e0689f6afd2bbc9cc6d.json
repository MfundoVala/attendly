{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/thenewowner/Documents/ReaktiveKoding/attendly/components/AlertModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { COLORS, FONTS, ICONS, SHADOW } from \"../constants\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nexport default function AlertModal(_ref) {\n  var displayMode = _ref.displayMode,\n      displayMsg = _ref.displayMsg,\n      visibility = _ref.visibility,\n      dismissAlert = _ref.dismissAlert;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    visible: visibility,\n    animationType: 'fade',\n    transparent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'rgba(52, 52, 52, 0.8)',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      backgroundColor: COLORS.blueVariant,\n      height: 200,\n      width: '90%',\n      borderWidth: 1,\n      borderColor: COLORS.blueVariant,\n      borderRadius: 7,\n      elevation: 10,\n      paddingHorizontal: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, displayMode == 'success' ? React.createElement(React.Fragment, null, React.createElement(Ionicons, {\n    name: \"checkmark-done-circle\",\n    color: 'green',\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(MaterialIcons, {\n    name: \"cancel\",\n    color: 'red',\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  })), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({\n      fontSize: 25\n    }, FONTS.h2_SemBold), {}, {\n      textAlign: 'center',\n      marginTop: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, displayMsg)), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return dismissAlert(false);\n    },\n    style: {\n      width: '45%',\n      borderRadius: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'absolute',\n      backgroundColor: COLORS.primary,\n      borderColor: '#ddd',\n      borderBottomWidth: 0,\n      borderTopLeftRadius: 25,\n      bottom: 0,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({\n      color: 'white'\n    }, FONTS.h3_SemBold), {}, {\n      margin: 15\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"OK\"))))));\n}","map":{"version":3,"sources":["/Users/thenewowner/Documents/ReaktiveKoding/attendly/components/AlertModal.js"],"names":["COLORS","FONTS","ICONS","SHADOW","React","useState","MaterialIcons","Ionicons","AlertModal","displayMode","displayMsg","visibility","dismissAlert","flex","backgroundColor","alignItems","justifyContent","blueVariant","height","width","borderWidth","borderColor","borderRadius","elevation","paddingHorizontal","margin","fontSize","h2_SemBold","textAlign","marginTop","position","primary","borderBottomWidth","borderTopLeftRadius","bottom","marginBottom","color","h3_SemBold"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,MAA/B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAGA,OAAOC,aAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,UAAT,OAKZ;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADDC,YACC,QADDA,YACC;AACD,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAED,UADX;AAEE,IAAA,aAAa,EAAE,MAFjB;AAGE,IAAA,WAAW,EAAE,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,eAAe,EAAE,uBAFZ;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,cAAc,EAAE;AAJX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,UAAU,EAAE,QADP;AAELD,MAAAA,eAAe,EAAEd,MAAM,CAACiB,WAFnB;AAGLC,MAAAA,MAAM,EAAE,GAHH;AAILC,MAAAA,KAAK,EAAE,KAJF;AAKLC,MAAAA,WAAW,EAAE,CALR;AAMLC,MAAAA,WAAW,EAAErB,MAAM,CAACiB,WANf;AAOLK,MAAAA,YAAY,EAAE,CAPT;AAQLC,MAAAA,SAAS,EAAE,EARN;AASLC,MAAAA,iBAAiB,EAAE;AATd,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACT,MAAAA,UAAU,EAAE,QAAb;AAAuBU,MAAAA,MAAM,EAAE;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,WAAW,IAAI,SAAf,GACC,0CACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,uBADP;AAEE,IAAA,KAAK,EAAE,OAFT;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GASC,0CACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,KAAK,EAAE,KAApC;AAA2C,IAAA,IAAI,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVJ,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK;AAAGiB,MAAAA,QAAQ,EAAE;AAAb,OAAoBzB,KAAK,CAAC0B,UAA1B;AAAsCC,MAAAA,SAAS,EAAE,QAAjD;AAA2DC,MAAAA,SAAS,EAAE;AAAtE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsFnB,UAAtF,CAdF,CAZF,EA6BE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAME,YAAY,CAAC,KAAD,CAAlB;AAAA,KAFX;AAGE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAE,KADF;AAELG,MAAAA,YAAY,EAAE,CAFT;AAGLP,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,cAAc,EAAE,QAJX;AAKLc,MAAAA,QAAQ,EAAE,UALL;AAMLhB,MAAAA,eAAe,EAAEd,MAAM,CAAC+B,OANnB;AAOLV,MAAAA,WAAW,EAAE,MAPR;AAQLW,MAAAA,iBAAiB,EAAE,CARd;AASLC,MAAAA,mBAAmB,EAAE,EAThB;AAULC,MAAAA,MAAM,EAAE,CAVH;AAWLC,MAAAA,YAAY,EAAE;AAXT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK;AAAGC,MAAAA,KAAK,EAAE;AAAV,OAAsBnC,KAAK,CAACoC,UAA5B;AAAwCZ,MAAAA,MAAM,EAAE;AAAhD,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAhBF,CA7BF,CAPF,CAJF,CADF,CADF;AAiED","sourcesContent":["import { COLORS, FONTS, ICONS, SHADOW } from \"../constants\"\nimport React, {useState} from 'react';\n \nimport {Modal, Text, View, TouchableOpacity} from 'react-native';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n \nexport default function AlertModal({\n  displayMode,\n  displayMsg,\n  visibility,\n  dismissAlert,\n}) {\n  return (\n    <View>\n      <Modal\n        visible={visibility}\n        animationType={'fade'}\n        transparent={true}>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: 'rgba(52, 52, 52, 0.8)',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <View\n            style={{\n              alignItems: 'center',\n              backgroundColor: COLORS.blueVariant,\n              height: 200,\n              width: '90%',\n              borderWidth: 1,\n              borderColor: COLORS.blueVariant,\n              borderRadius: 7,\n              elevation: 10,\n              paddingHorizontal: 30,\n            }}>\n            <View style={{alignItems: 'center', margin: 10}}>\n              {displayMode == 'success' ? (\n                <>\n                  <Ionicons\n                    name=\"checkmark-done-circle\"\n                    color={'green'}\n                    size={40}\n                  />\n                </>\n              ) : (\n                <>\n                  <MaterialIcons name=\"cancel\" color={'red'} size={50} />\n                </>\n              )}\n              <Text style={{fontSize: 25, ...FONTS.h2_SemBold, textAlign: 'center', marginTop: 5}}>{displayMsg}</Text>\n            </View>\n \n            <TouchableOpacity\n              activeOpacity={0.9}\n              onPress={() => dismissAlert(false)}\n              style={{\n                width: '45%',\n                borderRadius: 0,\n                alignItems: 'center',\n                justifyContent: 'center',\n                position: 'absolute',\n                backgroundColor: COLORS.primary,\n                borderColor: '#ddd',\n                borderBottomWidth: 0,\n                borderTopLeftRadius: 25,\n                bottom: 0,\n                marginBottom: 10,\n              }}>\n              <Text style={{color: 'white', ...FONTS.h3_SemBold, margin: 15}}>OK</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}"]},"metadata":{},"sourceType":"module"}