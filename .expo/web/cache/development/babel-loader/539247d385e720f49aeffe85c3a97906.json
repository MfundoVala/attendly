{"ast":null,"code":"var _jsxFileName = \"/Users/thenewowner/Documents/ReaktiveKoding/attendly/components/Btn.js\";\nimport React, { useEffect, useRef } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { COLORS, FONTS } from \"../constants\";\nexport default function Btn(props) {\n  var opacity = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true\n    }).start();\n  }, []);\n  var styles = StyleSheet.create({\n    container: {\n      width: \"60%\",\n      height: 55,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: COLORS.primary,\n      borderTopWidth: 0,\n      borderLeftWidth: 25,\n      borderLeftColor: \"transparent\"\n    },\n    text: {\n      color: COLORS.white,\n      textAlign: \"center\",\n      textTransform: \"uppercase\",\n      letterSpacing: 3,\n      marginTop: 0\n    },\n    cutDiamond: {\n      width: \"50%\",\n      height: 100,\n      alignItems: \"flex-end\",\n      justifyContent: \"center\",\n      marginTop: 90,\n      marginLeft: 50\n    },\n    cutDiamondTop: {\n      width: \"60%\",\n      height: 0,\n      borderTopWidth: 0,\n      borderTopColor: \"transparent\",\n      borderLeftColor: \"transparent\",\n      borderLeftWidth: 25,\n      borderBottomColor: COLORS.primary,\n      borderBottomWidth: 25\n    },\n    cutDiamondBottom: {\n      width: \"60%\",\n      height: 0,\n      borderTopWidth: 70,\n      borderTopColor: COLORS.primary,\n      borderLeftColor: \"transparent\",\n      borderRightColor: \"transparent\",\n      borderBottomColor: \"transparent\",\n      borderBottomWidth: 0\n    }\n  });\n  return React.createElement(Animated.View, {\n    style: styles.cutDiamond,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.onPress,\n    style: styles.cutDiamondTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, props.title)), React.createElement(TouchableOpacity, {\n    onPress: props.onPress,\n    style: styles.cutDiamondBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/thenewowner/Documents/ReaktiveKoding/attendly/components/Btn.js"],"names":["React","useEffect","useRef","COLORS","FONTS","Btn","props","opacity","Animated","Value","current","timing","toValue","duration","useNativeDriver","start","styles","StyleSheet","create","container","width","height","alignItems","justifyContent","backgroundColor","primary","borderTopWidth","borderLeftWidth","borderLeftColor","text","color","white","textAlign","textTransform","letterSpacing","marginTop","cutDiamond","marginLeft","cutDiamondTop","borderTopColor","borderBottomColor","borderBottomWidth","cutDiamondBottom","borderRightColor","onPress","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;;;;;AAEA,SAASC,MAAT,EAAiBC,KAAjB;AAGA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAE/B,MAAMC,OAAO,GAAGL,MAAM,CAAC,IAAIM,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,QAAQ,CAACG,MAAT,CACIJ,OADJ,EAEI;AACIK,MAAAA,OAAO,EAAE,CADb;AAEIC,MAAAA,QAAQ,EAAE,IAFd;AAGIC,MAAAA,eAAe,EAAE;AAHrB,KAFJ,EAOEC,KAPF;AAQH,GATQ,EASN,EATM,CAAT;AAYA,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,KADA;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPC,MAAAA,UAAU,EAAE,QAHL;AAIPC,MAAAA,cAAc,EAAE,QAJT;AAKPC,MAAAA,eAAe,EAAErB,MAAM,CAACsB,OALjB;AAMPC,MAAAA,cAAc,EAAE,CANT;AAOPC,MAAAA,eAAe,EAAE,EAPV;AAQPC,MAAAA,eAAe,EAAE;AARV,KADkB;AAY7BC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE3B,MAAM,CAAC4B,KADZ;AAEFC,MAAAA,SAAS,EAAE,QAFT;AAGFC,MAAAA,aAAa,EAAE,WAHb;AAIFC,MAAAA,aAAa,EAAE,CAJb;AAKFC,MAAAA,SAAS,EAAE;AALT,KAZuB;AAoB7BC,IAAAA,UAAU,EAAE;AACRhB,MAAAA,KAAK,EAAE,KADC;AAERC,MAAAA,MAAM,EAAE,GAFA;AAGRC,MAAAA,UAAU,EAAE,UAHJ;AAIRC,MAAAA,cAAc,EAAE,QAJR;AAKRY,MAAAA,SAAS,EAAE,EALH;AAMRE,MAAAA,UAAU,EAAE;AANJ,KApBiB;AA4B3BC,IAAAA,aAAa,EAAE;AACblB,MAAAA,KAAK,EAAE,KADM;AAEbC,MAAAA,MAAM,EAAE,CAFK;AAGbK,MAAAA,cAAc,EAAE,CAHH;AAIba,MAAAA,cAAc,EAAE,aAJH;AAKbX,MAAAA,eAAe,EAAE,aALJ;AAMbD,MAAAA,eAAe,EAAE,EANJ;AAOba,MAAAA,iBAAiB,EAAErC,MAAM,CAACsB,OAPb;AAQbgB,MAAAA,iBAAiB,EAAE;AARN,KA5BY;AAsC3BC,IAAAA,gBAAgB,EAAE;AAChBtB,MAAAA,KAAK,EAAE,KADS;AAEhBC,MAAAA,MAAM,EAAE,CAFQ;AAGhBK,MAAAA,cAAc,EAAE,EAHA;AAIhBa,MAAAA,cAAc,EAAEpC,MAAM,CAACsB,OAJP;AAKhBG,MAAAA,eAAe,EAAE,aALD;AAMhBe,MAAAA,gBAAgB,EAAE,aANF;AAOhBH,MAAAA,iBAAiB,EAAE,aAPH;AAQhBC,MAAAA,iBAAiB,EAAE;AARH;AAtCS,GAAlB,CAAf;AAmDA,SAAO,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EACvBzB,MAAM,CAACoB,UADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE9B,KAAK,CAACsC,OAAjC;AAA0C,IAAA,KAAK,EAAE5B,MAAM,CAACsB,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACa,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BvB,KAAK,CAACuC,KAAjC,CADJ,CAHG,EAMH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEvC,KAAK,CAACsC,OAAjC;AAA0C,IAAA,KAAK,EAAE5B,MAAM,CAAC0B,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANG,CAAP;AAWH","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { TouchableOpacity, Text, StyleSheet, Animated, View } from 'react-native'\nimport { COLORS, FONTS } from \"../constants\"\n\n\nexport default function Btn(props) {\n\n    const opacity = useRef(new Animated.Value(0)).current\n\n    useEffect(() => {\n        Animated.timing(\n            opacity,\n            {\n                toValue: 1,\n                duration: 1000,\n                useNativeDriver: true\n            }\n        ).start()\n    }, [])\n\n\n    const styles = StyleSheet.create({\n        container: {\n            width: \"60%\",\n            height: 55,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: COLORS.primary,\n            borderTopWidth: 0,\n            borderLeftWidth: 25,\n            borderLeftColor: \"transparent\",\n\n        },\n        text: {\n            color: COLORS.white,\n            textAlign: \"center\",\n            textTransform: \"uppercase\",\n            letterSpacing: 3,\n            marginTop: 0\n        },\n\n        cutDiamond: {\n            width: \"50%\",\n            height: 100,\n            alignItems: \"flex-end\",\n            justifyContent: \"center\",\n            marginTop: 90,\n            marginLeft: 50\n          },\n          cutDiamondTop: {\n            width: \"60%\",\n            height: 0,\n            borderTopWidth: 0,\n            borderTopColor: \"transparent\",\n            borderLeftColor: \"transparent\",\n            borderLeftWidth: 25,\n            borderBottomColor: COLORS.primary,\n            borderBottomWidth: 25,\n          },\n          cutDiamondBottom: {\n            width: \"60%\",            \n            height: 0,\n            borderTopWidth: 70,\n            borderTopColor: COLORS.primary,\n            borderLeftColor: \"transparent\",\n            borderRightColor: \"transparent\",\n            borderBottomColor: \"transparent\",\n            borderBottomWidth: 0,\n          },\n        \n    })\n\n    return <Animated.View style={\n        styles.cutDiamond\n    }>\n        <TouchableOpacity onPress={props.onPress} style={styles.cutDiamondTop}>\n            <Text style={styles.text}>{props.title}</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={props.onPress} style={styles.cutDiamondBottom}>\n        \n        </TouchableOpacity>\n        \n    </Animated.View>\n}"]},"metadata":{},"sourceType":"module"}